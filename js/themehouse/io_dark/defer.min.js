(function(f) {
    function g(k) {
        if (h[k]) return h[k].exports;
        var e = h[k] = {
            i: k,
            l: !1,
            exports: {}
        };
        f[k].call(e.exports, e, e.exports, g);
        e.l = !0;
        return e.exports
    }
    var h = {};
    g.m = f;
    g.c = h;
    g.d = function(f, e, a) {
        g.o(f, e) || Object.defineProperty(f, e, {
            configurable: !1,
            enumerable: !0,
            get: a
        })
    };
    g.n = function(f) {
        var e = f && f.__esModule ? function() {
            return f["default"]
        } : function() {
            return f
        };
        g.d(e, "a", e);
        return e
    };
    g.o = function(f, e) {
        return Object.prototype.hasOwnProperty.call(f, e)
    };
    g.p = "";
    return g(g.s = 3)
})([, , , function(f, g, h) {
    Object.defineProperty(g,
        "__esModule", {
            value: !0
        });
    f = h(4);
    g = h(5);
    var k = h(6),
        e = h(7),
        a = h(8),
        b = h(9),
        d = h(10),
        c = h(11),
        l = h(12),
        m = h(13);
    h(14);
    (new f.a({
        settings: window.themehouse.settings.inputSync
    })).register();
    (new g.a({
        settings: window.themehouse.settings.minimalSearch
    })).register();
    (new k.a({
        settings: window.themehouse.settings.loginPanel
    })).register();
    (new a.a({
        settings: window.themehouse.settings.sidebar
    })).register();
    (new e.a({
        settings: window.themehouse.settings.sidebarNav
    })).register();
    (new b.a({
        settings: window.themehouse.settings.fab
    })).register();
    (new d.a({
        settings: window.themehouse.settings.nodes
    })).register();
    (new c.a({
        settings: window.themehouse.settings.nodesCollapse
    })).register();
    (new l.a({
        settings: window.themehouse.settings.widthToggle
    })).register();
    (new m.a({
        settings: window.themehouse.settings.tooltipFix
    })).register();
    h(15)
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a,
            b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.sync = function(a) {
                var c = a.target || a.srcElement;
                if (c) {
                    a = c.value;
                    c = c.getAttribute("data-" + b.settings.data);
                    c = window.document.querySelectorAll(b.settings.selector + "[data-" + b.settings.data + '="' + c + '"]:not(:focus)');
                    for (var d = 0, l =
                            c.length; d < l; d++) c[d].value = a
                }
            };
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.initGet = function() {
                b.inputs = window.document.querySelectorAll(b.settings.selector);
                for (var a = 0, c = b.inputs.length; a < c; a++) {
                    var d = b.inputs[a];
                    d.addEventListener("propertychange", b.sync);
                    d.addEventListener("input", b.sync)
                }
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                selector: ".js-uix_syncValue",
                data: "uixsync"
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.inputs = [];
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_InputSync",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_InputSync",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.inputSync = {
        inputSync: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.setState = function(a, c) {
                if (a) {
                    var d = c.closest(b.settings.activeTargetsSelector);
                    d && (b.common.values.innerWidth <
                        parseInt(b.settings.breakpoint, 10) ? d.classList.add(b.settings.active) : d.classList.remove(b.settings.active))
                } else {
                    b.focusBlocked = !0;
                    if (d = window.document.querySelectorAll("." + b.settings.active))
                        for (var l = 0, e = d.length; l < e; l++) d[l].classList.remove(b.settings.active);
                    b.blurActiveEle();
                    window.setTimeout(function() {
                        b.blurActiveEle();
                        b.focusBlocked = !1
                    }, 900)
                }
            };
            this.blurActiveEle = function() {
                var b = window.document.activeElement;
                b && b.blur()
            };
            this.setDropdown = function(a, c) {
                if (c) {
                    var d = a.closest(b.settings.searchBarSelector).querySelector(b.settings.selector);
                    d && (d = d.getBoundingClientRect(), a.style.top = d.height + 10 + "px");
                    a.style.display = "block";
                    window.setTimeout(function() {
                        a.classList.add(b.settings.searchDropdownActive);
                        a.style.display = ""
                    }, 17);
                    b.numOpenedDropdown += 1
                } else a.classList.remove(b.settings.searchDropdownActive), a.style.top = "", --b.numOpenedDropdown;
                b.checkCloser()
            };
            this.checkCloser = function() {
                0 < b.numOpenedDropdown ? null === b.closerListener && (b.closerListener = window.document.addEventListener("click", function(a) {
                    if (a = a.target || a.toElelent || a.srcElement) {
                        var c = !1;
                        null === a.closest(b.settings.searchBarSelector) ? c = !0 : null !== a.closest(b.settings.closeSelector) && (c = !0);
                        if (c && (a = window.document.querySelectorAll("." + b.settings.searchDropdownActive)) && a.length) {
                            c = 0;
                            for (var d = a.length; c < d; c++) b.setDropdown(a[c], !1)
                        }
                    }
                    b.numOpenedDropdown = 0
                })) : null !== b.closerListener && (window.document.removeEventListener("click", b.closerListener), b.closerListener = null)
            };
            this.forceFocus = function(b) {
                b.focus();
                for (var a = 0; 10 > a; a++) window.setTimeout(function() {
                    b.focus()
                }, 50 * a)
            };
            this.initGet =
                function() {
                    for (var a = window.document.querySelectorAll(b.settings.searchDropdownTriggerSelector), c = function(c, d) {
                            var e = a[c],
                                l = e.closest(b.settings.searchBarSelector);
                            if (l) {
                                var f = l.querySelector(b.settings.searchDropdownSelector);
                                f && e.addEventListener("focus", function() {
                                    b.focusBlocked || b.common.values.innerWidth >= b.settings.dropdownBreakpoint && null === l.querySelector("." + b.settings.searchDropdownActive) && b.setDropdown(f, !0)
                                })
                            }
                        }, d = 0, e = a.length; d < e; d++) c(d, e);
                    var f = window.document.querySelectorAll(b.settings.selector);
                    if (f && f.length)
                        for (c = function(a, c) {
                                var d = f[a];
                                d.addEventListener("focus", function() {
                                    if (!b.focusBlocked) {
                                        var a = d.closest(b.settings.searchFormSelector);
                                        a && a.classList.add(b.settings.focusedSearchForm)
                                    }
                                });
                                d.addEventListener("blur", function() {
                                    if (!b.focusBlocked) {
                                        var a = d.closest(b.settings.searchFormSelector);
                                        a && a.classList.remove(b.settings.focusedSearchForm)
                                    }
                                });
                                var e = d.closest(b.settings.searchBarSelector);
                                if (e) {
                                    var l = e.querySelector(b.settings.triggerSelector);
                                    l && l.addEventListener("click", function() {
                                        b.focusBlocked ||
                                            (b.setState(!0, e), window.setTimeout(function() {
                                                b.forceFocus(d)
                                            }, 350))
                                    });
                                    var m = e.querySelector(b.settings.searchFormSelector);
                                    m && (m.addEventListener("click", function() {
                                        b.focusBlocked || b.forceFocus(d)
                                    }), (l = m.querySelector(b.settings.submitIconSelector)) && l.addEventListener("click", function() {
                                        m.submit()
                                    }));
                                    (l = e.querySelector(b.settings.detailedSelector)) && l.addEventListener("click", function(a) {
                                        var d = e.querySelector(b.settings.searchDropdownSelector);
                                        d && b.setDropdown(d, !0);
                                        a.preventDefault();
                                        return !1
                                    })
                                }
                            },
                            d = 0, e = f.length; d < e; d++) c(d, e);
                    if ((c = window.document.querySelectorAll(b.settings.closeSelector)) && c.length)
                        for (d = 0, e = c.length; d < e; d++) c[d].addEventListener("click", function(a) {
                            a.preventDefault();
                            b.setState(!1);
                            a.preventDefault();
                            return !1
                        })
                };
            this.initSet = function() {
                b.running = !0
            };
            this.resizeGet = function() {
                window.document.querySelector(b.settings.xfMenuOpenSelector) && (b.xfMenuOpen = !0)
            };
            this.resizeSet = function() {
                b.xfMenuOpen && (window.XF.MenuWatcher.closeAll(), b.xfMenuOpen = !1)
            };
            this.running = !1;
            this.settings =
                Object.assign({
                    selector: ".uix_searchInput",
                    closeSelector: ".uix_search--close",
                    active: "minimalSearch--active",
                    activeTargetsSelector: ".p-nav-inner, .p-sectionLinks, .p-header-content, .p-staffBar",
                    detailedSelector: ".uix_search--settings",
                    detailed: "minimalSearch--detailed",
                    breakpoint: "650px",
                    clickDelay: 100,
                    clickTargetSelector: ".js-uix_minimalSearch__target",
                    triggerSelector: ".uix_searchIconTrigger",
                    searchFormSelector: ".uix_searchForm",
                    focusedSearchForm: "uix_searchForm--focused",
                    searchBarSelector: ".uix_searchBar",
                    searchInnerSelector: ".uix_searchBarInner",
                    submitIconSelector: ".uix_search--submit .uix_icon--search",
                    searchDropdownSelector: ".uix_searchDropdown__menu",
                    searchDropdownTriggerSelector: ".uix_searchDropdown__trigger",
                    searchDropdownActive: "uix_searchDropdown__menu--active",
                    dropdownBreakpoint: 0,
                    xfMenuOpenSelector: '.menu.is-active form[data-xf-init="quick-search"]'
                }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.numOpenedDropdown = 0;
            this.closerListener = null;
            this.focusBlocked = this.xfMenuOpen = !1;
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_MinimalSearch",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_MinimalSearch",
                    func: this.initSet,
                    order: 10
                });
                this.common.register({
                    phase: "resizeGet",
                    addon: "TH_UIX_MinimalSearch",
                    func: this.resizeGet,
                    order: 10
                });
                this.common.register({
                    phase: "resizeSet",
                    addon: "TH_UIX_MinimalSearch",
                    func: this.resizeSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse &&
        (window.themehouse = {});
    window.themehouse.minimalSearch = {
        minimalSearch: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.keyCheck = function(a) {
                b.state && 27 === a.keyCode && b.setState(!1)
            };
            this.setState = function(a, d) {
                if (a) {
                    var c = window.document.querySelector(d);
                    if (c) {
                        var e = c.querySelector(b.settings.inputSelector);
                        e && e.focus();
                        c.classList.add(b.settings.active)
                    }
                    b.listener || (b.listener = !0, window.document.addEventListener("keydown", b.keyCheck))
                } else window.document.querySelector(b.settings.loginSelector).classList.remove(b.settings.active),
                    window.document.querySelector(b.settings.registerSelector).classList.remove(b.settings.active), b.listener && (window.document.removeEventListener("keydown", b.keyCheck), b.listener = !1);
                b.state = a
            };
            this.initGet = function() {
                var a = window.document.querySelector(b.settings.loginTriggerSelector);
                a && a.addEventListener("click", function(a) {
                    a.preventDefault();
                    b.setState(!0, b.settings.loginSelector);
                    return !1
                });
                (a = window.document.querySelector(b.settings.registerTriggerSelector)) && a.addEventListener("click", function(a) {
                    a.preventDefault();
                    b.setState(!0, b.settings.registerSelector);
                    return !1
                });
                (a = window.document.querySelector(b.settings.maskSelector)) && a.addEventListener("click", function() {
                    b.setState(!1)
                })
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                    loginSelector: ".uix__loginForm--login",
                    loginTriggerSelector: "#uix_loginPanel--trigger",
                    registerSelector: ".uix__loginForm--register",
                    registerTriggerSelector: "#uix_registerPanel--trigger",
                    maskSelector: ".uix__loginForm--mask",
                    active: "is-active",
                    inputSelector: ".input"
                },
                d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.listener = this.state = !1;
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_LoginPanel",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_LoginPanel",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.loginPanel = {
        loginPanel: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a,
            b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.toggleSidebar =
                function() {
                    var a = "0";
                    b.visible ? (window.document.querySelector(b.settings.selector).classList.remove(b.settings.visible), a = "1") : window.document.querySelector(b.settings.selector).classList.add(b.settings.visible);
                    b.visible = !b.visible;
                    b.common.fetch({
                        url: b.settings.link,
                        data: {
                            collapsed: a
                        }
                    })
                };
            this.navTrigger = function(a) {
                if (a = a.target) {
                    var d = a.closest(b.settings.navElSelector);
                    if (d) {
                        var c = d.querySelector(b.settings.subNavSelector);
                        c && (d = c.querySelector(b.settings.subNavInnerSelector)) && (d = d.offsetHeight +
                            "px", a.closest(b.settings.collapseTriggerSelector).classList.toggle(b.settings.collapseClass), c.classList.contains(b.settings.expandClass) ? (c.style.height = d, c.classList.remove(b.settings.expandClass), window.setTimeout(function() {
                                window.requestAnimationFrame(function() {
                                    c.style.height = 0;
                                    window.setTimeout(function() {
                                        window.requestAnimationFrame(function() {
                                            c.style.height = "";
                                            b.common.resizeFire()
                                        })
                                    }, b.settings.collapseDuration)
                                })
                            }, 17)) : (c.classList.add(b.settings.expandClass), c.style.height = d, window.setTimeout(function() {
                                window.requestAnimationFrame(function() {
                                    c.style.height =
                                        "";
                                    b.common.resizeFire()
                                })
                            }, b.settings.collapseDuration)))
                    }
                }
            };
            this.initGet = function() {
                var a = window.document.querySelectorAll(b.settings.collapseTriggerSelector);
                if (a && a.length)
                    for (var c = 0, d = a.length; c < d; c++) a[c].addEventListener("click", b.navTrigger);
                (a = window.document.querySelector(b.settings.triggerSelector)) && a.addEventListener("click", function() {
                    b.toggleSidebar()
                })
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                selector: "html",
                triggerSelector: "#uix_sidebarNav--trigger",
                visible: "sidebarNav--active",
                collapseTriggerSelector: ".uix_sidebarNav--trigger",
                navElSelector: ".p-navEl",
                subNavSelector: ".uix_sidebarNav__subNav",
                subNavInnerSelector: ".uix_sidebarNav__subNavInner",
                collapseClass: "is-expanded",
                expandClass: "subNav--expand",
                collapseDuration: 400
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.visible = !this.settings.state;
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_SidebarNav",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_SidebarNav",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.sidebarNav = {
        sidebarNav: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f =
        function() {
            function e(a) {
                var b = this,
                    d = a.settings;
                d = void 0 === d ? {} : d;
                var c = a.init;
                c = void 0 === c ? !1 : c;
                a = a.commonVersion;
                a = void 0 === a ? "20180112" : a;
                if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
                this.init = function() {
                    b.initGet();
                    b.initSet()
                };
                this.toggleSidebar = function() {
                    var a = "1";
                    window.document.querySelector(b.settings.selector).classList.contains(b.settings.collapseClass) ? (window.document.querySelector(b.settings.selector).classList.remove(b.settings.collapseClass), a =
                        "0") : window.document.querySelector(b.settings.selector).classList.add(b.settings.collapseClass);
                    null === b.settings.link ? b.common.warn("No AJAX link set for sidebar toggle") : b.common.fetch({
                        url: b.settings.link,
                        data: {
                            collapsed: a
                        }
                    });
                    window.setTimeout(function() {
                        b.common.resizeFire()
                    }, b.settings.delay)
                };
                this.initGet = function() {
                    var a = window.document.querySelectorAll(b.settings.triggerSelector);
                    if (a && a.length)
                        for (var c = 0, d = a.length; c < d; c++) a[c].addEventListener("click", function() {
                            b.toggleSidebar()
                        })
                };
                this.initSet =
                    function() {
                        b.running = !0
                    };
                this.running = !1;
                this.settings = Object.assign({
                    selector: "html",
                    triggerSelector: ".uix_sidebarTrigger",
                    collapseClass: "uix_sidebarCollapsed",
                    link: null,
                    delay: 400
                }, d);
                this.commonVersion = a;
                this.common = window.themehouse.common[a];
                c && this.init()
            }
            k(e, [{
                key: "register",
                value: function() {
                    this.common.register({
                        phase: "afterGet",
                        addon: "TH_UIX_Sidebar",
                        func: this.initGet,
                        order: 10
                    });
                    this.common.register({
                        phase: "afterSet",
                        addon: "TH_UIX_Sidebar",
                        func: this.initSet,
                        order: 10
                    })
                }
            }]);
            return e
        }();
    "undefined" ===
    typeof window.themehouse && (window.themehouse = {});
    window.themehouse.sidebar = {
        sidebar: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" :
                a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.setState = function(a) {
                if (a !== b.active) {
                    b.active = a;
                    for (var c = 0, d = b.eles.length; c < d; c++) {
                        var e = b.eles[c];
                        a ? e.classList.add(b.settings.active) : e.classList.remove(b.settings.active)
                    }
                }
            };
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.initGet = function() {
                b.settings.enabled && (b.eles = window.document.querySelectorAll(b.settings.selector));
                var a = window.document.querySelectorAll(b.settings.quickReplySelector);
                if (a && a.length)
                    for (var c =
                            0, d = a.length; c < d; c++) a[c].addEventListener("click", function(b) {
                        var a = window.XF.findRelativeIf(".js-quickReply .js-editor", window.jQuery(b.target));
                        a && (window.XF.focusEditor(a), b.preventDefault())
                    });
                if (b.settings.enableQuickPost && (a = window.document.querySelectorAll(b.settings.quickPostSelector)) && a.length)
                    for (c = 0, d = a.length; c < d; c++) a[c].addEventListener("click", function(a) {
                        var c = window.document.querySelector(b.settings.quickPostTargetSelector);
                        c && (a.preventDefault(), c.focus())
                    })
            };
            this.initSet = function() {
                b.settings.enabled &&
                    (b.running = !0)
            };
            this.scroll = function() {
                b.scrollGet();
                b.scrollSet()
            };
            this.scrollGet = function() {};
            this.scrollSet = function() {
                b.settings.enabled && (window.themehouse.data.scrollY > b.lastScrollTop ? b.setState(!1) : window.themehouse.data.scrollY < b.lastScrollTop && b.setState(!0), b.lastScrollTop = window.themehouse.data.scrollY)
            };
            this.running = !1;
            this.settings = Object.assign({
                selector: ".uix_fabBar",
                active: "uix_fabBar--active",
                quickReplySelector: ".uix_quickReply--button",
                quickPostSelector: ".uix_quickPost--button",
                quickPostTargetSelector: ".js-titleInput",
                enabled: !1,
                enableQuickPost: !1
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.eles = [];
            this.active = !0;
            this.lastScrollTop = 0;
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.settings.enabled && (this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_Fab",
                    func: this.initGet,
                    order: 10
                }), this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_Fab",
                    func: this.initSet,
                    order: 10
                }), this.common.register({
                    phase: "scrollGet",
                    addon: "TH_UIX_Fab",
                    func: this.scrollGet,
                    order: 10
                }), this.common.register({
                    phase: "scrollSet",
                    addon: "TH_UIX_Fab",
                    func: this.scrollSet,
                    order: 10
                }))
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.fab = {
        fab: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b =
                this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.initGet = function() {
                if (b.settings.enabled) {
                    var a = window.document.querySelectorAll(b.settings.selector);
                    if (a && a.length)
                        for (var c = function(c, d) {
                                var e = a[c];
                                e.addEventListener("click", function(a) {
                                    if ((a = a.target) && (a.closest(b.settings.subNodeSelector) || a.closest("a") ||
                                            "a" === a.tagName.toLowerCase())) return !0;
                                    if (a = e.querySelector(b.settings.hrefSelector))
                                        if (a = a.getAttribute("href")) window.location.href = a;
                                    return !0
                                })
                            }, d = 0, e = a.length; d < e; d++) c(d, e)
                }
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                selector: ".node-body",
                hrefSelector: ".node-title a",
                subNodeSelector: ".node-subNodeMenu",
                enabled: !1
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_Nodes",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_Nodes",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.nodeClick = {
        nodes: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype,
                b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.initGet = function() {
                var a = window.document.querySelectorAll(b.settings.triggerSelector);
                if (a && a.length)
                    for (var c = 0, d = a.length; c < d; c++) a[c].addEventListener("click", function(a) {
                        var c = a.target.closest(b.settings.parentSelector);
                        a = c.className.split(" ");
                        for (var d = -1, e = 0, f = a.length; e < f; e++) {
                            var g = a[e];
                            0 === g.indexOf(b.settings.nodeIdReplace) && g !== b.settings.nodeIdReplace && (d = parseInt(g.replace(b.settings.nodeIdReplace, ""), 10))
                        }
                        var h = c.querySelector(b.settings.childSelector);
                        a = h.querySelector(b.settings.childInnerSelector).offsetHeight;
                        h.style.height = a + "px";
                        h.classList.add("uix_node--transitioning");
                        window.requestAnimationFrame(function() {
                            var a = "1";
                            c.classList.contains(b.settings.active) ? (c.classList.remove(b.settings.active),
                                a = "0") : c.classList.add(b.settings.active);
                            b.common.fetch({
                                url: b.settings.link,
                                data: {
                                    collapsed: a,
                                    node_id: d
                                }
                            });
                            window.setTimeout(function() {
                                h.style.height = "";
                                h.classList.remove("uix_node--transitioning")
                            }, b.settings.duration)
                        })
                    })
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                triggerSelector: ".categoryCollapse--trigger",
                parentSelector: ".block--category",
                nodeIdReplace: "block--category",
                childSelector: ".uix_block-body--outer",
                childInnerSelector: ".block-body",
                active: "category--collapsed",
                duration: 400
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            this.listener = this.state = !1;
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_NodesCollapse",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_NodesCollapse",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.nodesCollapse = {
        nodesCollapse: f
    };
    g.a = f
}, function(f, g,
    h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            var c = a.init;
            c = void 0 === c ? !1 : c;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.init = function() {
                b.initGet();
                b.initSet()
            };
            this.initGet = function() {
                var a = window.document.querySelector(b.settings.triggerSelector),
                    c = window.document.querySelector(b.settings.selector);
                a && c && a.addEventListener("click", function() {
                    var a = "fixed";
                    c.classList.contains(b.settings.fixedClass) ? (c.classList.remove(b.settings.fixedClass), c.classList.add(b.settings.fluidClass), a = "fluid") : (c.classList.add(b.settings.fixedClass), c.classList.remove(b.settings.fluidClass));
                    window.setTimeout(function() {
                        b.common.resizeFire()
                    }, b.settings.delay);
                    b.common.fetch({
                        url: b.settings.link,
                        data: {
                            width: a
                        }
                    })
                })
            };
            this.initSet = function() {
                b.running = !0
            };
            this.running = !1;
            this.settings = Object.assign({
                selector: "html",
                triggerSelector: "#uix_widthToggle--trigger",
                fixedClass: "uix_page--fixed",
                fluidClass: "uix_page--fluid",
                enabled: !1,
                link: "",
                delay: 400
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a];
            c && this.init()
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "afterGet",
                    addon: "TH_UIX_WidthToggle",
                    func: this.initGet,
                    order: 10
                });
                this.common.register({
                    phase: "afterSet",
                    addon: "TH_UIX_WidthToggle",
                    func: this.initSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.widthToggle = {
        widthToggle: f
    };
    g.a = f
}, function(f, g, h) {
    var k = function() {
        function e(a, b) {
            for (var d = 0; d < b.length; d++) {
                var c = b[d];
                c.enumerable = c.enumerable || !1;
                c.configurable = !0;
                "value" in c && (c.writable = !0);
                Object.defineProperty(a, c.key, c)
            }
        }
        return function(a, b, d) {
            b && e(a.prototype, b);
            d && e(a, d);
            return a
        }
    }();
    f = function() {
        function e(a) {
            var b = this,
                d = a.settings;
            d = void 0 === d ? {} : d;
            a = a.commonVersion;
            a = void 0 === a ? "20180112" : a;
            if (!(this instanceof e)) throw new TypeError("Cannot call a class as a function");
            this.scroll = function() {
                b.scrollGet();
                b.scrollSet()
            };
            this.scrollGet = function() {
                window.XF.MemberTooltip.activeTooltip && window.XF.MemberTooltip.activeTooltip.trigger && window.XF.MemberTooltip.activeTooltip.trigger.$target && window.XF.MemberTooltip.activeTooltip.trigger.$target.length && window.XF.MemberTooltip.activeTooltip.trigger.$target[0].closest(b.settings.fixClassSelector) &&
                    (b.needsReposition = !0)
            };
            this.scrollSet = function() {
                b.needsReposition && (window.XF.MemberTooltip.activeTooltip && window.XF.MemberTooltip.activeTooltip.tooltip && window.XF.MemberTooltip.activeTooltip.tooltip.reposition(), b.needsReposition = !1)
            };
            this.needsReposition = !1;
            this.settings = Object.assign({
                fixClassSelector: ".uix_stickyBodyElement",
                enabled: !1
            }, d);
            this.commonVersion = a;
            this.common = window.themehouse.common[a]
        }
        k(e, [{
            key: "register",
            value: function() {
                this.common.register({
                    phase: "scrollGet",
                    addon: "TH_UIX_TooltipFix",
                    func: this.scrollGet,
                    order: 10
                });
                this.common.register({
                    phase: "scrollSet",
                    addon: "TH_UIX_TooltipFix",
                    func: this.scrollSet,
                    order: 10
                })
            }
        }]);
        return e
    }();
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.tooltipFix = {
        tooltipFix: f
    };
    g.a = f
}, function(f, g, h) {
    var k = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(a) {
            return typeof a
        } : function(a) {
            return a && "function" === typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        },
        e = function d(b) {
            for (var c =
                    1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, e = "", f = 0; f < c; f++) e += "     ";
            if ("object" === ("undefined" === typeof b ? "undefined" : k(b))) {
                f = Object.keys(b);
                for (var g = 0, h = f.length; g < h; g++) {
                    var n = f[g],
                        p = b[n];
                    "object" === ("undefined" === typeof p ? "undefined" : k(p)) ? (console.log(e + n + ":"), d(b[n], c + 1)) : console.log(e + n + ": " + b[n])
                }
            } else console.log(e + b)
        };
    "undefined" === typeof window.themehouse && (window.themehouse = {});
    window.themehouse.debug = function() {
        for (var b = window.themehouse.settings, d = Object.keys(b), c =
                0, f = d.length; c < f; c++) {
            var g = d[c];
            console.log("==========================");
            console.log(g);
            e(b[g], 1)
        }
    }
}, function(f, g) {
    window.XF.HScroller.prototype.updateScroll = function() {
        var f = this.$scrollTarget[0],
            g = this.$scrollTarget.normalizedScrollLeft(),
            e = 0 < g;
        f = f.offsetWidth + g + 1 < f.scrollWidth;
        e ? this.$scrollTarget.addClass("th_scroller--start-active") : this.$scrollTarget.removeClass("th_scroller--start-active");
        f ? this.$scrollTarget.addClass("th_scroller--end-active") : this.$scrollTarget.removeClass("th_scroller--end-active");
        this.$goStart[e ? "addClass" : "removeClass"]("is-active");
        this.$goEnd[f ? "addClass" : "removeClass"]("is-active")
    }
}]);